
@using SMS.Models.ViewModel
@model SMS.Models.ViewModel.StudentViewModel

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
                <div id="errorMsg" class="text-danger"></div>
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="margin-top: 10px">
            <div class="col-md-4">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Of Birth" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Father Name" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                @Html.DropDownList("FacultyId", new SelectList(ViewBag.facultyList, "Value", "Text"), "--Select Faculty--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacultyName, "", new { @class = "text-danger" })
            </div>
            </div>
        <div>
            @Html.LabelFor(modelitem => modelitem.Subjects, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="margin-top: 9px">
                @Html.Hidden("SubjectCount",Model.Subjects.Count)
                @for (int i = 0; i < Model.Subjects.Count; i++)
                {
                    @Html.HiddenFor(x => x.Subjects[i].Id)
                    @Html.HiddenFor(x => x.Subjects[i].SubjectName)
                    @Html.CheckBoxFor(x => x.Subjects[i].IsSelected)
                    @Html.Label(Model.Subjects[i].SubjectName)
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(modelitem => modelitem.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="margin-top: 9px">
                @Html.RadioButtonFor(modelitem => modelitem.Gender, "M") @Html.Label("Male")
                @Html.RadioButtonFor(modelitem => modelitem.Gender, "F") @Html.Label("Female")
                @Html.RadioButtonFor(modelitem => modelitem.Gender, "O") @Html.Label("Other")
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" onclick="create()" class="btn btn-default" />
            </div>
        </div>
    </div>
}